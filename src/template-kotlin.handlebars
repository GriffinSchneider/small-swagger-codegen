package com.gasbuddy.mobile.webservices.rx.{{{apiClassName}}}

import com.gasbuddy.mobile.webservices.GBIORxWebServices
import com.gasbuddy.mobile.webservices.RxWebServices
import com.google.gson.annotations.SerializedName
import io.gasbuddy.webservices.model.Address
import io.gasbuddy.webservices.model.EmpyrCards
import io.reactivex.Single
import io.reactivex.schedulers.Schedulers
import retrofit2.Response
import retrofit2.Retrofit
import retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory
import retrofit2.converter.gson.GsonConverterFactory
import retrofit2.http.*

class {{{apiClassName}}}WebServices : GBIORxWebServices() {

    //region Companion
    companion object {
        @JvmStatic
        val api = Retrofit.Builder()
                .baseUrl(GBIORxWebServices.getHost())
                .addConverterFactory(GsonConverterFactory.create())
                .addCallAdapterFactory(RxJava2CallAdapterFactory.createWithScheduler(Schedulers.io()))
                .client(RxWebServices.httpClient().newBuilder().build())
                .build()
                .create(API::class.java)
    }
    //endregion


    //region Web Services
    interface API {
        {{#each methods}}
        
            /**
             * {{{description}}}
             {{#each params}}
             * @param {{{name}}} {{{description}}}
             {{/each}}
             * @return Single<{{{response.type}}}>
             */
            @Headers("Content-Type:application/json")
            @{{{capMethod}}}("{{{path}}}")
            fun {{{name}}}(
                @HeaderMap headerMap: Map<String, String>, 
            {{#each params}}
                @{{{inCap}}}("{{{serverName}}}") {{{name}}}: {{{type}}}{{#unless required}}? = null{{/unless}},
            {{/each}}
            ) : Single<{{{response.type}}}>
        {{/each}}
    }
    //endregion


    //region Models
    {{#each objectModels}}

    {{/each}}

    {{#each enumModels}}

    {{/each}}
    //endregion
    
}