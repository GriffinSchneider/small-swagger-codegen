import { parameterBuilder, fetchHelper } from 'rest-api-support';

export default class {{{apiClassName}}} {
  constructor({
    baseUrl = '',
    fetch,
    requestInterceptor,
    responseInterceptor,
  } = {}) {
    Object.assign(this, { baseUrl, fetch, requestInterceptor, responseInterceptor });
  }

{{#each methods}}
  /*
   * {{{description}}}
   *
  {{#each params}}
   * @parameter { {{{type}}} } {{{name}}}: {{{description}}}
  {{/each}}
   */
  async {{{name}}}({
{{#each params}}
    {{{name}}},
{{/each}}
  }, fetchOptions) {
    // Build parameters, run request interceptors, fetch, and then run response interceptors
    const fetchArgs = parameterBuilder('{{{capMethod}}}', '{{{path}}}')
{{#each params}}      .{{{in}}}('{{{serverName}}}', {{{name}}}{{#if format}}, { {{#if format}}
        format: '{{format}}',
      {{/if}} }{{#if @last}}){{/if}}{{/if}}){{#if @last}}
      .build();{{/if}}
{{/each}}
    return fetchHelper(this, fetchArgs, fetchOptions);
  }
{{/each}}
}
