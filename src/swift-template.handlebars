import Foundation
import SwaggerClientSupport

open class {{{apiClassName}}}Class: SwaggerApi {
{{#each methods}}
    {{~#maybeComment description}}
    {{{description}}}
    {{/maybeComment}}
    {{#each params}}
    {{~#maybeComment description}}
    - parameter {{{name}}}: {{{description}}}
    {{/maybeComment}}
    {{/each}}
    open func {{{name}}}(
    {{#each params}}
        {{{name}}}: {{{type}}}{{#unless required}}? = nil{{/unless}},
    {{/each}}
        timeout: TimeInterval? = nil,
        {{#if streaming}}eventClosure{{else}}completion{{/if}}: @escaping ({{{response.type}}}?, ErrorResponse?) -> Void
    ) {
        self.{{#if streaming}}streamingRequest{{else}}request{{/if}}(method: .{{{method}}}, path: "{{{path}}}", timeout: timeout, params: [
        {{#each params}}
            .init(name: "{{{serverName}}}", in: .{{{in}}}, value: {{{name}}}, format: {{#if format}}"{{format}}"{{else}}nil{{/if}}) {{~#unless @last}},{{/unless}}
        {{/each}}
        ], {{#if streaming}}eventClosure: eventClosure{{else}}completion: completion{{/if}})
    }

{{/each}}
}

public let {{{apiClassName}}} = {{{apiClassName}}}Class()


{{#each objectModels}}
{{> modelClassTemplate}}

{{/each}}

{{#each enumModels}}
public enum {{{name}}}: {{{enumType}}}, SwaggerEnum {
    {{#each values}}
    case {{{name}}} = {{{value}}}
    {{/each}}
    case _unknown = "_unknown"
    public func serialize(format: String? = nil) -> Any? {
        if SwaggerApi.debugMode && self == ._unknown {
            fatalError("Attempting to serialize {{{name}}}._unknown! (This error will not happen in release mode.)")
        }
        return rawValue;
    }
    public func serializeToString(format: String? = nil) -> String? {
        return rawValue.serializeToString(format: format);
    }
    public static func deserialize(json: Any?, format: String? = nil, debugDescriptor: String = "{{{name}}}") throws -> {{{name}}} {
        guard let asType = json as? {{{enumType}}},
            let asEnum = {{{name}}}(rawValue: asType) else {
            if SwaggerApi.debugMode {
                fatalError("Attempting to deserialize {{{name}}}._unknown for \(debugDescriptor)! (This error will not happen in release mode.)")
            }
            return ._unknown;
        }
        return asEnum
    }
}

{{/each}}
