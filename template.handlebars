import Foundation

open class Api {
{{#each methods}}
    open static func {{name}}(
    {{#each params}}
    {{name}}: {{type}},
    {{/each}}
    completion: (Error?, {{response.type}}) -> Void
    ) {
        // {{method}} {{path}}
    }
{{/each}}
}

{{#each objectModels}}
  open class {{name}}: SwaggerSerializeable {
  {{#with schema}}
    {{#each properties}}
      public var {{@key}}: {{type}}
    {{/each}}

    public init(
    {{#each properties}}
      {{@key}}: {{type}}{{#unless @last}},{{/unless}}
    {{/each}}
    ) {
    {{#each properties}}
      self.{{@key}} = {{@key}}
    {{/each}}
    }

    public func shallowSerialize() -> Any {
      return [
      {{#each properties}}
        "{{specName}}": {{@key}},
      {{/each}}
      ]
    }
  {{/with}}
  }

{{/each}}

{{#each enumModels}}
  public enum {{name}}: {{schema.enumType}}, SwaggerSerializeable {
  {{#with schema}}
    {{#each values}}
      case {{name}} = {{{value}}}
    {{/each}}
    public func shallowSerialize() -> Any {
      return rawValue;
    }
  {{/with}}
  }
{{/each}}
